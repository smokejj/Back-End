import express, { Application, Request, Response , NextFunction} from 'express';

const app: Application = express();
const PORT: number = 3000;

app.use(express.json());


// ðŸ”¹ Rota GET (Buscar dados)
app.get('/usuarios', (req: Request, res: Response) => {
  res.status(200).json({ mensagem: 'Lista de usuÃ¡rios' });
});

app.get('/sobre', (req: Request, res: Response) => {
      res.status(200).json({ nome:"JÃ©", idade:16,descricao:"ala esquerdo" });
});

// ðŸ”¹ Rota POST (Criar novo usuÃ¡rio)
app.post('/usuarios', (req: Request, res: Response) => {
  const { nome } = req.body;
  if (!nome) {
    res.status(400).json({ mensagem: 'Nome Ã© obrigatÃ³rio!' });
  }
  res.status(201).json({ mensagem: `UsuÃ¡rio ${nome} criado com sucesso!` });
});

app.post('/comentarios', (req:Request,res: Response)=>{
  const {texto} = req.body;
  if(!texto){
    res.status(400).json({mensagem: "Texto Ã© obrigatÃ³rio"});
    return;
  }
  res.status(201).json({mensagem: "CommetÃ¡rio recebido"});
  return;
})

  app.delete('/comentarios/:id', (req: Request, res: Response)=>{
    const {id} = req.params;
    res.status(204).json({mensagem:"Comentario excluido"});
  })

  const dataLog = (req: Request, res:Response, next: NextFunction)=>{
  let data: Date = new Date;
  console.log(`RequisiÃ§Ã£o feita em:${data}`)
  next();
}

app.use(dataLog)

const porteiroMiddleware = (req: Request, res: Response, next: Function) => {
  console.log(`ðŸ“¢ RequisiÃ§Ã£o recebida em: ${req.url}`);
  next(); // Permite a requisiÃ§Ã£o continuar para a rota
};

app.use(porteiroMiddleware);


app.listen(PORT, () => console.log(`Servidor rodando em http://localhost:${PORT}`));
